<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--  @Component, @Controller, @Service, @Repository 애노테이션이 붙은
          클래스를 찾아 인스턴스를 생성한다.
          물론 의존 객체도 주입해줄 것이다, -->
    <context:component-scan base-package="java100.app.web.v04"/>

   <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="java100.app.web.v02.Test12WebBindingInitializer"/>
        </property>
         
         <property name="messageConverters">
        <list>
           <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
           
           <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        </list>
        </property>
    </bean>
    
    <!--  멀티파트 형식으로 처리할 객체 추가 -->
    <!-- 방법1: Apache의 commosn-fileupload 라이브러리를 사용할 때 등록할 객체 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000" />
    </bean>
-->
    <!--  방법2 Servlet 3.0 의기능 이용 -->
    <bean id="multipartResolver" 
    class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>

    <!-- 기본 ViewResolver를 교체한다. -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        
        <!-- JSTL를 사용할 경우 다음 뷰 처리기를 등록해야한다. -->
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        
        <!--  요청 핸들러가 리턴한 값 압뒤에 붙일 텍스트 설정이다.
              프론트컨트롤러는 이 값을 가지고 view를 실행한다. -->
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    
    <mvc:interceptors>
        <!--  URL 지정하지 않으면 모든 /APP/* 요청에 대해 인터셉터를 실행한다. -->
        <bean class="java100.app.web.v04.Interceptor01"/>
        
        <mvc:interceptor>
            <mvc:mapping path="/v04/controller02/*"/>
            <mvc:exclude-mapping path="/v04/controller02/m1"/>
            <bean class="java100.app.web.v04.Interceptor02"/>
        </mvc:interceptor>
    
    </mvc:interceptors>
   
     
    
    
</beans>

