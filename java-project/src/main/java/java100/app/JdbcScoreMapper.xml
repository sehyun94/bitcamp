<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  DAO 객체를 자동으로 생성하려면, 
        namespace의 값이 인터페이스 이름과 같아야 한다. -->    
<mapper namespace="java100.app.dao.ScoreDao">
    
        
    <resultMap type="score" id="scoreMap">
	
	   <id column="no" property="no"/>
    </resultMap>
        
    <sql id="select1">
        select 
            no, name, kor, eng, math
    </sql>
    
    <select id="selectList" resultMap="scoreMap" parameterType="map">
        <include refid="select1"/>
        from ex_score
        
        <!--  첫번째 조건문 앞에 'or' 가 붙는데,
               이런 경우 mybatis 가 자동으로 제거한다.
    <if test="words != null">
        <where>
            <foreach collection="words" item="word">
                or title like '${word}%'
            </foreach>
        </where>
    </if>

   정렬 조건에 따라 SQL 문을 변경한다 
        order by        
        <choose>
            <when test="OrderColumn == 'title' and align == 'desc'">
                title desc
            </when>
            
            <when test="OrderColumn == 'title' and align == 'asc'">
                title asc
            </when>            
            
            <when test="OrderColumn == 'regdt' and align == 'asc'">
                regdt asc
            </when>
                  
            <when test="OrderColumn == 'vwcnt' and align == 'desc'">
                vwcnt desc
            </when>
                  
            <when test="OrderColumn == 'vwcnt' and align == 'asc'">
                vwcnt asc
            </when>
            <otherwise>
                regdt desc
            </otherwise>
        </choose>
         -->
    </select>
    
    
    <insert id="insert" parameterType="score">
    insert into ex_score(name,kor,eng,math)
     values(#{name},#{kor},#{eng},#{math})
    </insert> 
    
    <update id="update" parameterType="score">
    	
    update ex_score set
     name=#{name},
     kor=#{kor},
     eng=#{eng},
     math=#{math}
     where no=#{no}
    </update>
    
     
    <delete id="delete" parameterType="int">
    delete from ex_score where no=#{value}
    </delete>
    
    <select id="selectOne" resultMap="scoreMap" parameterType="int">
       <include refid="select1"/>
         from ex_score
        where no=#{value}
    </select>
</mapper>