<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면,
     namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.BookDao">

    <resultMap type="book" id="bookMap">
        <id column="no" property="no"/>
        <result column="titl" property="title"/>
        <result column="dcrt" property="description"/>
        <result column="pric" property="price"/>
        <result column="pres" property="press"/>
        <result column="phot" property="photo"/>
        <result column="pubdt" property="publishedDate"/>
    </resultMap>
 
 <select id="findAll" resultMap="bookMap" parameterType="map">
    select 
        no,
        titl,
        pres,
        pric,
        phot
        from ex_book
        
       
                <!--  페이징 처리 -->
        limit #{startIndex}, #{size}
    </select>

    <select id="findByNo" resultMap="bookMap" parameterType="int">
        select
        phot,
        no,
        titl,
        pres,
        pubdt,
        pric,
        dcrt
        from ex_book
        where no=#{value}
        </select>

    <insert id="insert" parameterType="book">
        insert into ex_book(titl,dcrt,pric,pres,phot,pubdt)
        values(#{title},#{description},#{price},#{press},#{photo},#{publishedDate})
    </insert>
    
     <select id="countAll" resultType="int">
      select count(*) from ex_book
        </select>
        
        <delete id="delete" parameterType="int">
        delete from ex_book
        where no=#{value}
    </delete>
     
      <update id="update" parameterType="book">
        update ex_book set 
            titl=#{title},
            pres=#{press},
            pric=#{price},
            dcrt=#{description},
            pubdt=#{publishedDate},
            phot=#{photo}
        where no=#{no}
    </update>
    
</mapper>  









